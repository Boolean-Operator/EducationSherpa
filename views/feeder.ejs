<% include partials/header %>


	<div class="jumbotron jumbotron-billboard">
		<div class="img"></div>
	    <div class="container">
	  		<div class="row">
	      	<div class="col-lg-12">
				  	<h1>Find your Feeder School Pattern</h1>
	       	</div>
				</div>
			</div>
		</div>

	  <div class="container" id ="school">
	  	<div class="leftdiv">
				<div  id="locationField" class="mytextbox">
					<input id="autocomplete"  placeholder="Enter your address" type="text"></input>
					
				</div>
	  		<div class = "addressTable">
		  		<table id="address">
				    <tr>
				  		<td class="label">Street address</td>
				      <td class="slimField"><input class="field" id="street_number"
				              disabled="true"></input></td>
				      <td class="wideField" colspan="2"><input class="field" id="route"
				              disabled="true"></input></td>
			      </tr>
				    <tr>
				    	<td class="label">City</td>
				      <td class="wideField" colspan="3"><input class="field" id="locality"
				              disabled="true"></input></td>
			      </tr>
				    <tr>
				    	<td class="label">State</td>
				      <td class="slimField"><input class="field"
				              id="administrative_area_level_1" disabled="true"></input></td>
				      <td class="label">Zip code</td>
				      <td class="wideField"><input class="field" id="postal_code"
				              disabled="true"></input></td>
			      </tr>
				    <tr>
				    	<td class="label">Country</td>
				      <td class="wideField" colspan="3"><input class="field"
				              id="country" disabled="true"></input></td>
			    	</tr>
					</table>
				<!--<input type = 'submit' class = "submitBtn">-->
	  		</div>
			  <div id="elem">
			  	<h2>Elementary School</h2>
			  	<h4>School Name</h4>
			  	<h4>School AddressName</h4>
			  </div>
			  <div id="middle">
			  	<h2>Middle School</h2>
			  	<h4>School Name</h4>
			  	<h4>School AddressName</h4>
			  </div>
			  <div id="high">
			  	<h2>High School</h2>
			  	<h4>School Name</h4>
			  	<h4>School Address</h4>
			  </div>
		 	</div>
	  	<div class="rightdiv" id="map"></div>
	  </div>

<% include partials/footer %>
<% include partials/scripts %>

<script>
var marker, pos, autocomplete;

var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initMap() {
  var locate = {lat:39.12485, lng:-75.52636};
	var options = {
		zoom:10,
		center: locate
	};

  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete((document.getElementById('autocomplete')),
            {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);

  function fillInAddress() {
  // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();
    var lattude = place.geometry.viewport.f.b;
    var lngtude = place.geometry.viewport.b.b;
// Hardcode accuracy difference in coords
    lattude  = lattude + 0.001360;
    lngtude =  lngtude + 0.001589;
    pos = {lat:lattude, lng:lngtude};
    // locate = pos;
    console.log(pos);


    for (var component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
      }

// Get each component of the address from the place details
// and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
          var val = place.address_components[i][componentForm[addressType]];
          document.getElementById(addressType).value = val;
        }
      }
    }

		var map = new google.maps.Map(document.getElementById('map'),options);

    var infoWindow = new google.maps.InfoWindow;
// HTML5 geolocation.
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
        };

//use geolocation to set marker location
// Will update to allow placement of multiple markers
			marker = new google.maps.Marker({
						position: pos,
						map: map
				});

// center map at geolocation
			map.setCenter(pos);
          }, function() {
            handleLocationError(true, map.getCenter());
          });
    } else {
    // Browser doesn't support Geolocation
      handleLocationError(false, map.getCenter());

    }
  };

    function handleLocationError(browserHasGeolocation,  pos) {
      infoWindow.setPosition(pos);
      infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Your browser doesn\'t support geolocation.');
      infoWindow.open(map);
    };

</script>

<script
		src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBoghMfd2fobTrImQGjCHOqNk8oDr2QOLE&libraries=places&callback=initMap"
		async defer>

</script>	


<!--key=AIzaSyBoghMfd2fobTrImQGjCHOqNk8oDr2QOLE-->

<% include partials/closingtags %>
